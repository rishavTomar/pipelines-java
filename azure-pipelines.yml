name: Java CI/CD Pipeline

trigger:
 branches:
  include:
  - main
  - develop

pool:
  vmImage: ubuntu-latest

variables:
- group: sonar

stages:
- stage: CompileCode
  jobs:
  - job: CompileCode
    steps:
    - script: |
        echo "checking Maven Installation"
        mvn -v || {
          echo "Maven not found. Installing maven"
          sudo apt-get update
          sudo apt-get install -y maven
        }
      displayName: Instaslling maven
    
    - script: |
        echo "Java Version:"
        java -version
      displayName: checking java version
    
    - script: |
         echo "Java code compilation"
         mvn clean compile
      displayName: code compilation

- stage: AutomatedTesting
  dependsOn: CompileCode
  jobs:
  - job: JavaTestCasesRun
    steps:
    - script: |
        echo "checking Maven Installation"
        mvn -v || {
          echo "Maven not found. Installing maven"
          sudo apt-get update
          sudo apt-get install -y maven
        }
      displayName: Instaslling maven

    - script: |
         mvn test
      displayName: Running java test cases

- stage: QualityCheck
  dependsOn: CompileCode
  jobs:
  - job: TrivyCodeScanning
    steps:
    - script: |
         sudo apt-get install wget apt-transport-https gnupg lsb-release
         wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
         echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
         sudo apt-get update
         sudo apt-get install trivy
      displayName: Installing Trivy

    - script: |
         echo "Trivy scanning"
         trivy fs --severity HIGH,CRITICAL --no-progress --format json --output trivy_report.json .
      displayName: Trivy code scanning

- stage: SonarCodeAnalysis
  dependsOn: CompileCode
  jobs:
  - job: RunSonarCodeAnalysis
    steps:
    - script: |
        echo "Running SonarQube Analysis"
        mvn sonar:sonar \
          -Dsonar.projectKey=$(SONAR_PROJECT_KEY) \
          -Dsonar.host.url=$(SONAR_HOST_URL) \
          -Dsonar.login=$(sonar_token)

    
- stage: BuildAndPublish
  dependsOn: [SonarCodeAnalysis,QualityCheck]
  jobs:
  - job: BuildandPublishPackage

    steps:
    - script: |
        echo "Install Maven"
         mvn -v || {
          echo "Maven not found. Installing maven"
          sudo apt-get update
          sudo apt-get install -y maven
        }
      displayName: Instaslling maven
    
    - script: |
        mvn clean package
      displayName: Building Java code
    
    - script: |
        echo "create settings.xml file for nexus repo"
      displayName: Creating setting.xm for nexus repo
    
    - script: |
        maven clean deploy -s settings.xml
      env:
        NEXUS_USERNAME: $(NEXUS_USERNAME)
        NEXUS_PASSWORD: $(NEXUS_PASSWORD)
      displayName: Deploy artifacts to nexus


  
   
    
     

